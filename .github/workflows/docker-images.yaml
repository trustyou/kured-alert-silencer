---
name: Release images

on:
  push:
    branches:
      - main

    tags:
      - v*

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: Ensure go version
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx for multiarch images
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          VERSION=$VERSION make push-images
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Get Changelog Entry
        if: startsWith(github.ref, 'refs/tags/')
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: v${{ env.VERSION }}
          path: ./CHANGELOG.md

      - name: Create manifests
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=${{ env.VERSION }} make manifest

      - name: Publish
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          files: |
            install/kubernetes/deployment.yaml
            install/kubernetes/rbac.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
